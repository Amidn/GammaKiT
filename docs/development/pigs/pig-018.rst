.. include:: ../../references.txt

.. _pig-018:

**********************
PIG 18 - Documentation
**********************

* Author: Christoph Deil, Axel Donath, JosÃ© Enrique Ruiz
* Created: Oct 16, 2019
* Status: draft
* Discussion: `GH 2463`_

Abstract
========

Over the past years the Gammapy package and documentation has grown organically,
at the moment there's a lot of duplicated and missing content. We propose to
spend significant effort to restructure and improve the Gammapy documentation,
as described in this PIG.

Introduction
============

What we have
------------
Gammapy started in 2013 and since then the package and documentation has
continuously evolved (see :ref:`changelog`). The oldest version of the
documentation that is still readily available online is for Gammapy v0.6 from
April 2017 (https://docs.gammapy.org/0.6). The current version of the documentation
is https://docs.gammapy.org/0.14/.

In 2018, we introduced a new setup for tutorials (written as Jupyter notebooks,
integrated into the Sphinx documentation) and ``gammapy download`` as the way
that users download the tutorial notebooks and example datasets (see :ref:`pig-004`).

Currently there are a 18 tutorial notebooks plus 7 listed as "extra topics").
Between the notebooks there is a lot of duplicated content, but on the other
hand there is also still a lot of missing documentation. E.g. recently implemented
large changes in Gammapy such as :ref:`pig-012` and :ref:`pig-016` are not completely
documented yet. In addition to the Jupyter notebook tutorials, we have RST documentation
pages for each Gammapy sub-package. In some cases there is a lot of content and
examples (e.g. :ref:`maps` or :ref:`modeling`), in other cases there is only a
sentence or two and the API docs (e.g. :ref:`cube`).

The tutorials usually have the following structure: introduction, setup, main
content, and sometimes at the end a summary, exercises or links to other
documentation. The sub-package RST pages usually have the following structure
(following the Astropy docs): Introduction (overview description), Getting
Started (first examples), Using (links to tutorials and sometimes sub-pages),
API reference.

In 2018, following other projects such as Astropy or Sunpy, we also created a
"project webpage" at https://gammapy.org which is not versioned and hand-written,
in addition to https://docs.gammapy.org which is versioned and auto-generated by Sphinx.


What other projects have
------------------------
We will not discuss how other projects structure their documenation,
but we did look at and think it's useful to compare other examples:

- https://jupyter.org/ and https://jupyterlab.readthedocs.io
- https://www.astropy.org/ and https://docs.astropy.org
- https://sunpy.org/ and https://docs.sunpy.org
- http://cxc.harvard.edu/sherpa/ and https://sherpa.readthedocs.io
- https://fermi.gsfc.nasa.gov/ssc/data/analysis/
- https://fermipy.readthedocs.io
- http://cta.irap.omp.eu/ctools
- https://www.djangoproject.com/ and https://docs.djangoproject.com


Proposal
========

General Concept
---------------
We propose to mostly keep the existing Gammapy documentation setup, i.e. to
maintain part of the documentation in RST pages and another part in Jupyter
notebooks. We admit that there is no clear separation between the content
of both, but we give the following rough guidelines:

- More content is moved to Jupyter notebooks. E.g. currently the RST pages for
  maps, modeling, catalog, detect, etc. have a few code examples. Those will
  be moved corresponding notebooks ``maps.ipynb``, ``modeling.ipynb``, ``catalog.ipynb`` and
  ``detect.ipynb``, i.e. in many cases there would be a hands-on tutorial
  introduction for each sub-package. More cross-links between IPYNB, RST and
  API docs should be created.
- Keep sub-package RST pages short and put links to relevant hands-on
  tutorials at the top, and the API docs at the bottom. Some pages have
  significant content, which is not related to code examples in between.
  E.g. for maps, modeling or IRFs there are is a description of the design.
- Add a Gammapy workflow overview page to the RST docs, where the general data
  analysis concept is explained: DL3 -> Datasets -> Model -> Fitting

Notebooks Overview
------------------
We propose to structure and extend the notebook content in the following way:


Analysis Intro (HLI)
~~~~~~~~~~~~~~~~~~~~
- HESS DL3 high level interface analysis 1D / 3D / joint / stacked (``hess.ipynb``)

Data access
~~~~~~~~~~~
- HESS DL3 data (to be implemented)
- CTA 1DC data simulation (``cta_data_analysis.ipynb``)
- Fermi-LAT 3FHL data (``fermi_lat.ipynb``)

Analysis Advanced (2nd level API)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
- Observation selection / grouping (to be implemented)
- Light curve computation (``light_curve.ipynb``)
- Phase curve computation (``pulsar_analysis.ipynb``)
- Dark matter analysis (to be implemented)
- Image analysis (``image_analysis.ipynb``)
- Combined instrument crab analysis using Fermi / HESS / HAWC data (to be implemented)
- Naima model fitting (to be implemented)
- Binned simulation 1D / 3D (``spectrum_simulation.ipynb``, ``simulate_3d.ipynb``)
- Sensitivity computation (``cta_sensistivity.ipynb``)
- MCMC sampling (``mcmc_sampling.ipynb``)
- Flux point fitting (``sed_fitting_gammacat_fermi.ipynb``)
- Background model making (``background_model.ipynb``)?

Subpackage Notebooks
~~~~~~~~~~~~~~~~~~~~
- Datasets (``gammapy.modeling`` / ``gammapy.cube`` / ``gammapy.spectrum``) (to be implemented)
- Maps (``gammapy.maps``) (``maps.ipynb``)
- Models (``gammapy.modeling.models``) (``models.ipynb``)
- Fitting (``gammapy.modeling``) (to be implemented)
- Statistic (``gammapy.stats``) (to be implemented)
- Source detection (``gammapy.detect``) (``detect_ts.ipynb``, ``cwt.ipynb``)
- Source catalogs (``gammapy.catalog``) (to be implemented)

Extra Topics
~~~~~~~~~~~~
- Dark matter models (``gammapy.astro.darkmatter``) (``astro_dark_matter.ipynb``)
- Source population modelling (``gammapy.astro.population``) (``source_population_model.ipynb``)
- Sherpa for Gammapy users (``image_fitting_with_sherpa.ipynb``, ``spectrum_fitting_with_sherpa.ipynb``)?
- Astropy regions / photutils for Gammapy users (to be implemented)?
- HGPS data inspection (``hgps.ipynb``)?
- Gammapy in a nutshell (``first_steps.ipynb``)?


Further Technical Improvements
------------------------------
#. Link between notebooks and Sphinx docs (`GH 2175`_)
#. Include examples in Sphinx docs (`GH 172`_)
#. Review and improve inheritance and docstrings (`GH 2221`_)
#. Sphinx HTML formatting missing colon in parameters (`GH 2164`_)


Alternatives
============

We could try to change to a purely Jupyter notebook maintained documentation
(e.g. the "Python Data Science Handbook" is written just as Jupyter notebooks).
Or we could change documentation system and write all documentation as RST or MD,
and then have a documentation processor that auto-generates notebooks.
E.g. Jupytext does this, and partly e.g. the scikit-learn docs do that for their
tutorials, they maintain it in Python scripts and RST files.

There's a lot of ways to structure the documentation, or to put different focus.
Please send suggestions and feedback for the proposal above!

Outlook
=======

This is a short-term proposal, to quickly improve the Gammapy documentation
within the next 1-2 months, with the limited contributors we already have.

In early 2020, we should run a Gammapy user survey and gather feedback on
the Gammapy package and documentation. Similar to what was done at the end
of CTA 1DC, or see e.g. the `Scipy documentation user survey`_ as an example.

We should try to hire a technical writer (e.g. via
https://developers.google.com/season-of-docs/) or try to attract a contributor
for Gammapy that has a strong interest in documentation, e.g. to read
https://www.writethedocs.org/guide/writing/docs-principles/ and apply it to
Gammapy.

Gammapy is applying to be the CTA science tools. If selected (or before), we
expect major changes for the Gammapy project and documentation, e.g. moving it
to CTAO and https://www.cta-observatory.org/, changing the current H.E.S.S.
example datasets in the tutorials to CTA datasets, ...


Decision
========

tbd

.. _GH 172: https://github.com/gammapy/gammapy/issues/172
.. _GH 241: https://github.com/gammapy/gammapy/issues/241
.. _GH 242: https://github.com/gammapy/gammapy/issues/242
.. _GH 1540: https://github.com/gammapy/gammapy/issues/1540
.. _GH 1577: https://github.com/gammapy/gammapy/issues/1577
.. _GH 1597: https://github.com/gammapy/gammapy/issues/1597
.. _GH 690: https://github.com/gammapy/gammapy/issues/690
.. _GH 2164: https://github.com/gammapy/gammapy/issues/2164
.. _GH 2175: https://github.com/gammapy/gammapy/issues/2175
.. _GH 2221: https://github.com/gammapy/gammapy/issues/2221
.. _GH 2463: https://github.com/gammapy/gammapy/pull/2463
.. _80-20 rule: https://en.wikipedia.org/wiki/Pareto_principle
.. _Scipy documentation user survey:  https://forms.gle/eK3x2ohJs1sLPJEk8