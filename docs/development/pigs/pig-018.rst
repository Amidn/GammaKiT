.. include:: ../../references.txt

.. _pig-018:

**********************
PIG 18 - Documentation
**********************

* Author: Christoph Deil, Axel Donath, Jos√© Enrique Ruiz
* Created: Oct 16, 2019
* Status: draft
* Discussion: `GH 2463`_

Abstract
========

Over the past years the Gammapy package and documentation has grown organically,
at the moment there's a lot of duplicated and missing content. We propose to
spend significant effort to restructure and improve the Gammapy documentation,
as described in this PIG.

Introduction
============

Gammapy started in 2013 and since then the package and documentation has
continuously evolved (see :ref:`changelog`). The oldest version of the
documentation that is still readily available online is for Gammapy v0.6 from
April 2017 (https://docs.gammapy.org/0.6). In 2018, we introduced a new setup
for tutorials (written as Jupyter notebooks, integrated into the Sphinx
documentation) and ``gammapy download`` as the way that users download the
tutorial notebooks and example datasets (see :ref:`pig-004`).

In December 2019, we created a "project webpage" at https://gammapy.org which is
not versioned and hand-written, in addition to https://docs.gammapy.org which is
versioned and generated by Sphinx. This is a common setup for many projects,
e.g. Jupyter or Astropy or Sunpy also have a "project webpage" in addition to
the Sphinx documentation. We're mosty happy with https://gammapy.org, except
https://gammapy.org/cta.html is outdated, and there is the question if we should
remove or update that page, generally the question is where instrument-specific
information (CTA, HESS, Fermi, maybe MAGIC, VERITAS, HAWC, ...) should go for now.

The current version of the documentation is https://docs.gammapy.org/0.14/. The
user is guided to first to Installation, then to Getting Started which shows how
to do ``gammapy download`` and then how to execute Gammapy from Python, IPython
or Jupyter, and then to the tutorial notebooks. There are a lot of tutorial
notebooks (18 plus 7 listed as "extra topics"), and a lot of duplicated content
that has accumulated over the years, simply because often it's easier to add a
new notebook when implementing a new feature than to discuss and restructure
existing documentation. There is also a lot of missing documentation, since
large changes in Gammapy were implemented just weeks ago (see e.g.
:ref:`pig-012` and :ref:`pig-016`). In addition to the Jupyter notebook
tutorials, we have one or a few RST documentation pages for each Gammapy
sub-package. In some cases there is a lot of content and examples (e.g.
:ref:`maps` or :ref:`modeling`), in other cases there is only a sentence or two
and the API docs (e.g. :ref:`cube`).

The tutorials usually have the following structure: introduction, setup, main
content, and sometimes at the end a summary, exercises or links to other
documentation. The sub-package RST pages usually have the following structure
(following the Astropy docs): Introduction (overview description), Getting
Started (first examples), Using (links to tutorials and sometimes sub-pages),
API reference.

Major questions are:

- Do we mostly maintain this documentation structure? Or is there a better way?
- What content should go in RST pages or Jupyter notebooks?
- Where to put documentation for CTA, H.E.S.S., Fermi-LAT, ...?
- What RST pages and tutorial notebooks do we need (see lists below)

We will not discuss how other projects structure their documenation,
but we did look at and think it's useful to compare other examples:

- https://jupyter.org/ and https://jupyterlab.readthedocs.io
- https://www.astropy.org/ and https://docs.astropy.org
- https://sunpy.org/ and https://docs.sunpy.org
- http://cxc.harvard.edu/sherpa/ and https://sherpa.readthedocs.io
- https://fermi.gsfc.nasa.gov/ssc/data/analysis/
- https://fermipy.readthedocs.io
- http://cta.irap.omp.eu/ctools
- https://www.djangoproject.com/ and https://docs.djangoproject.com

Proposal
========

General Concept
---------------

We propose to mostly keep the existing Gammapy documentation setup, i.e. to
maintain part of the documentation in RST pages and another part in Jupyter
notebooks. We admit that there is no clear separation between the content
of both, but we give the following rough guidelines:

- More content is moved to Jupyter notebooks. E.g. currently the RST pages for
  maps, modeling, catalog, detect, etc. have a few code examples. Those will
  be moved corresponding notebooks ``maps.ipynb``, ``modeling.ipynb``, ``catalog.ipynb`` and
  ``detect.ipynb``, i.e. in many cases there would be a hands-on tutorial
  introduction for each sub-package. More cross-links between IPYNB, RST and
  API docs should be created.
- Keep sub-package RST pages short and put links to relevant hands-on
  tutorials at the top, and the API docs at the bottom. Some pages have
  significant content, which is not related to code examples in between.
  E.g. for maps, modeling or IRFs there are is a description of the design.

Notebooks Overview
------------------
We propose to structure the notebook / tutorial content in the following way:


Analysis Intro
~~~~~~~~~~~~~~
- HESS DL3 data analysis 1D / 3D / joint / stacked (``hess.ipynb``) (HLI)
- CTA 1DC simulation / analysis (``cta_data_analysis.ipynb``, ) (simulation + 2nd level API)
- Fermi-LAT 3FHL data analysis (``fermi_lat_ipynb``) (2nd level API)

Package Intro
~~~~~~~~~~~~~
- Gammapy workflow overview (no code, to be implemented)

- Data access / IRFs (``gammapy.data`` / ``gammapy.irf``) (``cta_1dc_introduction.ipynb``)
- Data selection and reduction (``gammapy.cube`` / ``gammapy.spectrum``) (to be implemented)
- Datasets (``gammapy.modeling`` / ``gammapy.cube`` / ``gammapy.spectrum``) (to be implemented)
- Maps (``gammapy.maps``) (``maps.ipynb``)
- Models (``gammapy.modeling.models``) (``models.ipynb``)
- Fitting (``gammapy.modeling``) (to be implemented)
- Statistic (``gammapy.stats``) (to be implemented)

- Source detection (``gammapy.detect``) (``detect_ts.ipynb``, ``cwt.ipynb``)
- Source catalogs (``gammapy.catalog``) (to be implemented)
- Dark matter models (``gammapy.astro.darkmatter``) (``astro_dark_matter.ipynb``)
- Source population modelling (``gammapy.astro.population``) (``source_population_model.ipynb``)

Analysis Advanced (2nd level API)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
- Observation grouping (to be implemented)
- Light curve computation (``light_curve.ipynb``)
- Phase curve computation (``pulsar_analysis.ipynb``)
- Dark matter analysis (to be implemented)
- Image analysis (``image_analysis.ipynb``)
- Combined instrument crab analysis using Fermi / HESS / HAWC data (to be implemented)
- Naima model fitting (to be implemented)
- Binned simulation 1D / 3D (``spectrum_simulation.ipynb``, ``simulate_3d.ipynb``)
- Sensitivity computation (``cta_sensistivity.ipynb``)
- MCMC sampling (``mcmc_sampling.ipynb``)
- Flux point fitting (``sed_fitting_gammacat_fermi.ipynb``)
- Background model making (``background_model.ipynb``)?


Extra Topics
~~~~~~~~~~~~
- Sherpa for Gammapy users (``image_fitting_with_sherpa.ipynb``, ``spectrum_fitting_with_sherpa.ipynb``)?
- Astropy regions / photutils for Gammapy users (to be implemented)?
- HGPS data inspection (``hgps.ipynb``)?
- Gammapy in a nutshell (``first_steps.ipynb``)?



Task list
---------

We suggest the following additions, removals and changes, relative to the current
documentation (see https://docs.gammapy.org/0.14/).

#. https://docs.gammapy.org/0.14/getting-started.html - TBD: keep as-is or change?
#. ``first_steps.ipynb`` - keep as-is? or change to show a likelihood analysis?
#. Where to add docs explaining package structure and general concepts,
   and how data reduction and modeling and fitting works?
#. Improve ``maps.ipynb`` and ``docs/maps``.
   Remove empty ``docs/map/wcsmap.rst``, move content from ``docs/maps/plotting.rst``
   and ``docs/maps/hpxmap.rst``, and most examples from ``docs/maps/index.rst`` to
   ``maps.ipynb``. TBD: or is this too much? Split into two notebooks?
#. Move most examples from ``docs/modeling`` to ``models.ipynb``, and improve the content
   of both (the RST page should describe the concepts, possibly with diagrams how the
   classes relate. (`GH 241`_, `GH 242`_)
#. Add ``regions.ipynb`` to show region analysis examples, including radial,
   linear and other profiles as region-based measurements.
#. Remove https://gammapy.org/cta.html, move that content to
   https://gammapy.org/about.html and the "CTA with Gammapy" notebook.
   The "CTA with Gammapy" notebook could be rewritten from scratch, or
   it could be a much shortened version of the existing content from
   ``cta_1dc_introduction.ipynb`` and ``cta_data_analysis.ipynb``.
#. ``hess.ipynb`` - Shorten and polish a bit.
   Reproduce some HESS validation paper analysis and results.
   (approximately for now, should match exactly once background model is available)
#. ``fermi_lat.ipynb`` - Shorten and polish a bit.
   Reproduce some 3FHL catalog results, and compare / overplot 3FHL results to Gammapy
   (e.g. Crab or Galactic center).
#. ``analysis_3d.ipynb``, ``analysis_3d_joint.ipynb``, ``cta_data_analysis.ipynb``
   TBD: How many analysis notebooks, showing config and Python interface?
   Add a new ``datasets.ipynb`` or ``mwl.ipynb`` to show how this works?
   Split by data reduction and modeling / fitting?
#. ``image_analysis.ipynb`` and ``image_fitting_with_sherpa.ipynb``
   Shorten and polish. Do the same analysis with both tools, results should be identical.
   This can be seen as "Gammapy for Sherpa users" or "Sherpa for Gammapy users" tutorials.
   Move the Sherpa notebooks (also ``spectrum_fitting_with_sherpa.ipynb``)
   into an "extra topics" section at the end.
#. Improve ``detect_ts.ipynb`` and ``docs/detect``.
   Move examples to the notebook, show Li and Ma there in addition to TS maps.
#. ``spectrum_simulation.ipynb``, ``simulate_3d.ipynb`` and ``cta_sensitivity.ipynb``
   need to be improved a lot, but the basic structure can stay as-is (3 notebooks).
   We need worked examples how to do something useful, using
   examples with CTA prod3 IRFs. Extra points if some results from papers are reproduced
   with Gammapy (e.g. sensitivity curves)
#. ``hgps.ipynb`` - shorten and polish a bit
#. ``pulsar_analysis.ipynb`` - TBD: needs work?
#. ``mcmc_sampling.ipynb`` - TBD: needs work?
#. ``background_model.ipynb`` - TBD: needs work?
#. ``source_population_model.ipynb`` and ``docs/astro/population.rst`` - Polish
#. ``astro_dark_matter.ipynb`` and ``docs/astro/darkmatter.rst`` - TBD: needs work?
#. ``cwt.ipynb`` - TBD: remove? improve?
#. If available, add tutorial notebook for event sampling, i.e. simulating data.
#. TBD: where to describe the design with observations, datasets and data reduction?
#. TBD: Remove or move https://docs.gammapy.org/0.14/references.html?
#. TBD: Add a FAQ or HOWTO list?
#. TBD: add tutorial notebook how to fit an SED with Naima
   (and move example from ``NaimaSpectralModel`` docstring there)
#. Make a tutorial notebook for a spectral analysis with obs grouping (`GH 1577`_)
#. Add utility functions or docs for working with TS values (`GH 1540`_)
#. Improve Gammapy installation instructions (`GH 690`_)
#. Add tutorial how to make IACT DL3 index tables (`GH 1597`_)

Technical improvements for docs:

#. Make it easier to link from Notebooks to 
#. Links between notebooks and Sphinx docs (`GH 2175`_)
#. Include examples in Sphinx docs (`GH 172`_)
#. Review and improve inheritance and docstrings (`GH 2221`_)
#. Sphinx HTML formatting missing colon in parameters (`GH 2164`_)

This list isn't sorted by priority. We don't think it's useful to argue whether
docs for maps or modeling, or for data reduction or fitting should be higher
priority. Our suggestion is to follow the `80-20 rule`_, which in this context
means that 80% of the changes can be done in 20% of the time, and the final 20%
of content and polish for the documentation will take 80% of the time.
Basically: we should quickly add and remove docs pages and move existing
content, this is about a week of work and can be done by one person. Then we can
improve existing content and add new one in the coming months, one page and
notebook at a time. Gammapy v1.0 is not a magic mark where the package or
documentation is "done", that work can happen before or after the v1.0 release,
it't not a blocker.


Alternatives
============

We could try to change to a purely Jupyter notebook maintained documentation
(e.g. the "Python Data Science Handbook" is written just as Jupyter notebooks).
Or we could change documentation system and write all documentation as RST or MD,
and then have a documentation processor that auto-generates notebooks.
E.g. Jupytext does this, and partly e.g. the scikit-learn docs do that for their
tutorials, they maintain it in Python scripts and RST files.

There's a lot of ways to structure the documentation, or to put different focus.
Please send suggestions and feedback for the proposal above!

Outlook
=======

This is a short-term proposal, to quickly improve the Gammapy documentation
within the next 1-2 months, with the limited contributors we already have.

In early 2020, we should run a Gammapy user survey and gather feedback on
the Gammapy package and documentation. Similar to what was done at the end
of CTA 1DC, or see e.g. the `Scipy documentation user survey`_ as an example.

We should try to hire a technical writer (e.g. via
https://developers.google.com/season-of-docs/) or try to attract a contributor
for Gammapy that has a strong interest in documentation, e.g. to read
https://www.writethedocs.org/guide/writing/docs-principles/ and apply it to
Gammapy.

Gammapy is applying to be the CTA science tools. If selected (or before), we
expect major changes for the Gammapy project and documentation, e.g. moving it
to CTAO and https://www.cta-observatory.org/, changing the current H.E.S.S.
example datasets in the tutorials to CTA datasets, ...


Decision
========

tbd

.. _GH 172: https://github.com/gammapy/gammapy/issues/172
.. _GH 241: https://github.com/gammapy/gammapy/issues/241
.. _GH 242: https://github.com/gammapy/gammapy/issues/242
.. _GH 1540: https://github.com/gammapy/gammapy/issues/1540
.. _GH 1577: https://github.com/gammapy/gammapy/issues/1577
.. _GH 1597: https://github.com/gammapy/gammapy/issues/1597
.. _GH 690: https://github.com/gammapy/gammapy/issues/690
.. _GH 2164: https://github.com/gammapy/gammapy/issues/2164
.. _GH 2175: https://github.com/gammapy/gammapy/issues/2175
.. _GH 2221: https://github.com/gammapy/gammapy/issues/2221
.. _GH 2463: https://github.com/gammapy/gammapy/pull/2463
.. _80-20 rule: https://en.wikipedia.org/wiki/Pareto_principle
.. _Scipy documentation user survey:  https://forms.gle/eK3x2ohJs1sLPJEk8