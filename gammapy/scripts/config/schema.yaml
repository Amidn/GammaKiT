---
"$schema": "http://json-schema.org/schema#"
"title": "Schema validation for Gammapy high-level interface API configuration"

type: object
additionalProperties: true
properties:

# Block: general
# General settings for the API
#
#    Logging settings for the session
#    Example values for the following properties
#    logging:
#        level: CRITICAL, ERROR, WARNING, INFO, DEBUG
#        filename: mylogfile.log
#        filemode: w
#        format: "%(asctime)s - %(message)s"
#        datefmt: "%d-%b-%y %H:%M:%S"
#
#    Output folder where files will be stored
#    outdir:
#
    general:
        type: object
        default: {"logging": {}}
        additionalProperties: false
        properties:
            outdir:
                type: string
                default: "."
            logging:
                type: object
                default: {"level": ""}
                additionalProperties: false
                properties:
                    level:
                        description: ""
                        type: string
                        default: INFO
                        enum: [CRITICAL, 50,
                               ERROR, 40,
                               WARNING, 30,
                               INFO, 20,
                               DEBUG, 10,
                               NOTSET]
                    filename: {type: string}
                    filemode: {type: string}
                    format: {type: string}
                    datefmt: {type: string}
                required: [level]
                dependencies:
                    filemode: [filename]
        required: [logging]

# Block: observations
# Observations used in the analysis
#
#    Path to data store where to fetch observations
#    datastore:
#
#    List of filters with selection criteria
#    Example values for the following properties
#    filters:
#
#        - filter_type: sky_circle, angle_box, par_box, par_value, ids, all
#          Type of filter used
#
#          Properties when filter_type is "par_box"
#          frame: galactic, equatorial, icrs, fk5
#          lon: 83.633 deg
#          lat: 22.014 deg
#          radius: 1 deg
#          border: 1 deg
#
#          Properties when filter_type is "par_box" or "par_value"
#          variable: TARGET_NAME
#
#          Value parameter to match declared variable when filter_type is "par_value"
#          value_param: Crab
#
#          Value range with units to match declared variable when filter_type is "par_box"
#          value_range:
#              - 265 deg
#              - 268 deg
#
#          List of observation identifiers when filter_type is "ids"
#          obs_ids:
#              - 23523
#              - 23526
#
#          inverted: true for not matching criteria
#          exclude: true to exclude matched observations
#
    observations:
        type: object
        default: {}
        additionalProperties: false
        properties:
            datastore:
                type: string
                default:
                    $GAMMAPY_DATA/hess-dl3-dr1
            filters:
                type: array
                default: [{}]
                items:
                    type: object
                    additionalProperties: false
                    properties:
                        exclude: {type: boolean}
                        inverted: {type: boolean}
                        filter_type:
                            default: par_value
                            enum: [sky_circle,
                                   angle_box,
                                   par_box,
                                   par_value,
                                   ids,
                                   all]
                        frame:
                            enum: [galactic, equatorial, icrs, fk5]
                        lon: {type: number}
                        lat: {type: number}
                        radius: {type: number}
                        border: {type: number}
                        variable: {type: string, default: TARGET_NAME}
                        value_param: {type: string, default: Crab}
                        value_range:
                            type: array
                            items: {type: number}
                            minItems: 2
                            maxItems: 2
                        obs_ids:
                            type: array
                            items: {type: integer}
                    required: [filter_type]
        required: [datastore]

# Block: reduction
# Process of data reduction
#
#    Chosen data reducer process
#    data_reducer: 1d, 2d, 3d
#
#    Parameters used in the estimation of the background
#    Example values for the following properties
#    background:
#
#        background_estimator: reflected
#        on_region:
#            center:
#            - 83.633 deg
#            - 22.014 deg
#            frame: icrs
#            radius: 0.11 deg
#        exclusion_mask
#            filename: mask.fits
#            hdu: IMAGE
#
#    containment_correction: true

    reduction:
        type: object
        default: {}
        additionalProperties: false
        properties:
            background:
                type: object
                default: {}
                additionalProperties: false
                properties:
                    background_estimator:
                        default: reflected
                        enum: [reflected, ring]
                    on_region:
                        type: object
                        default: {}
                        additionalProperties: false
                        properties:
                            center:
                                type: array
                                items: {type: number}
                                default: [83.633 deg, 22.014 deg]
                                minItems: 2
                                maxItems: 2
                            radius:
                                type: number
                                default: 0.1 deg
                            frame:
                                default: icrs
                                enum: [galactic, equatorial, icrs, fk5]
                    exclusion_mask:
                        type: object
                        additionalProperties: false
                        properties:
                            filename:
                                type: string
                            hdu:
                                type: string
                if:
                    properties:
                        exclusion_mask:
                            required: [filename]
            data_reducer:
                default: 1d
                enum: [1d, 2d, 3d]
            containment_correction:
                type: boolean
                default: true
        if:
            properties:
                data_reducer:
                    const: 1d
        then:
            properties:
                background:
                    required: [background_estimator, on_region]

# Block: geometry
# Geometry where to perform data reduction and analysis
#
#        Map pixel size in degrees
#        binsz: 0.02
#        Coordinate system
#        coordsys: CEL, GAL
#        Any valid WCS projection type
#        proj: CAR
#        Lon and lat in deg in the coordsys of the map
#        skydir: [83, 22]
#        Width of the map in degrees
#        width: [5, 5]
#        offset_max: 3 deg
#
#        Additional Map Axes other than spatial
#        Example values for energy axes
#        axes:
#            e_reco:
#                lo_bnd: 0.01
#                hi_bnd: 100
#                nbin: 73
#                unit: TeV
#                interp: log
#            e_true:
#                lo_bnd: 0.01
#                hi_bnd: 315
#                nbin: 109
#                unit: TeV
#                interp: log

    geometry:
        description: ""
        type: object
        default: {}
        additionalProperties: false
        properties:
            binsz:
                type: number
            coordsys:
                type: string
                enum: [CEL, GAL]
            proj:
                type: string
            skydir:
                type: array
                items: {type: number}
                minItems: 2
                maxItems: 2
            width:
                type: array
                items: {type: number}
                minItems: 1
                maxItems: 2
            offset_max:
                type: number
            axes:
                type: object
                default: {}
                additionalProperties: false
                properties:
                    e_reco:
                        "$ref": "#/definitions/energy_axis"
                    e_true:
                        "$ref": "#/definitions/energy_axis"

# Block: model
# Parameters that define the models used in the analysis process
# TODO

    model:
        description: "Model serialized components and parameters."
        type: object
        additionalProperties: false
        default: {}
        properties:
            components:
                description: "List of component models."
                type: array
                items:
                    type: object
                    additionalProperties: false
                    properties:
                        name: {type: string}
                        spatial:
                            "$ref": "#/definitions/model_components"
                        spectral:
                            "$ref": "#/definitions/model_components"

# Block: fit
# Parameters that are used in the fitting process
#
#        Energy range considered, min and max values with unitas
#        fit_range:
#            min: 1 TeV
#            max: 100 Tev

    fit:
        type: object
        additionalProperties: false
        default: {}
        properties:
            fit_range:
                description: "Energy fit range with units."
                type: object
                additionalProperties: false
                properties:
                    min: {type: number}
                    max: {type: number}

# Block: flux
# Parameters that are used during the flux estimation process
#
#        Energy binning considered
#        fp_binning:
#            lo_bnd: 1
#            hi_bnd: 10
#            nbin: 11
#            unit: TeV
#            interp: log

    flux:
        type: object
        additionalProperties: false
        default: {}
        properties:
            fp_binning:
                "$ref": "#/definitions/energy_axis"

required: [general, observations]

definitions:
    model_components:
        type: object
        additionalProperties: false
        properties:
            type: {type: string}
            parameters:
                type: array
                items:
                    type: object
                    additionalProperties: false
                    properties:
                        name: {type: string}
                        value: {type: number}
                        factor: {type: number}
                        scale: {type: number}
                        unit: {type: string}
                        min: {type: number}
                        max: {type: number}
                        frozen: {type: boolean}
    energy_axis:
        type: object
        additionalProperties: false
        properties:
            name: {type: string}
            lo_bnd: {type: number}
            hi_bnd: {type: number}
            nbin: {type: number}
            unit: {type: string}
            interp:
                type: string
                enum: [lin, log, sqrt]
            node_type:
                type: string
                enum: [edges, center]

        required: [lo_bnd, hi_bnd, nbin, unit]
